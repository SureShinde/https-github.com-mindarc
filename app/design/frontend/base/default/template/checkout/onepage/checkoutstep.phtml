<form id="co-checkoutstep-form" action="">
<ul class="form-list">
	<li>
		<label for="shipping:firstname" class="required"><em>*</em>Additional Name</label>
		<div class="input-box">
		     <input type="text" id="shipping:firstname" name="entrant_name" value="" title="Entrant Name" maxlength="255" class="input-text required-entry" style="width: 365px" />
		</div>
	</li>
	<li>
		<label for="shipping:entrant_phone" class="required"><em>*</em>Additional Phone</label>
		<div class="input-box">
			<input type="text" id="shipping:entrant_phone" name="entrant_phone" value="" title="Entrant Phone" maxlength="255" class="input-text required-entry" style="width: 365px" />
		</div>
	</li>
	<li>
		 <label for="shipping:lastname" class="required"><em>*</em>Additional Email</label>
		<div class="input-box">
			<input type="text" id="shipping:entrant_email" name="entrant_email" value="" title="Entrant Email" maxlength="255" class="input-text required-entry validate-email" style="width: 365px" />
		</div>
	</li>
	<li>
		<label for="shipping:lastname" class="required"><em>*</em>Local Address</label>
		<div class="input-box">
		   <textarea id="shipping:local_address" name="local_address"  title="local address" maxlength="255" class="input-text required-entry" style="width: 365px"></textarea>
		</div>
	</li>
	<li class="control">
         <input type="checkbox" name="shipping[same_as_billing]" id="shipping:same_as_entrant" value="1" title="Driver same as Entrant"  class="checkbox"><label for="shipping:same_as_billing">same as Permanent Address</label>
    </li>
    <li>
		 <label for="shipping:firstname" class="required"><em>*</em>Permanent Address</label>
		<div class="input-box">
		    <textarea id="shipping:permanent" name="permanent_address" title="Permanent Address" maxlength="255" class="input-text required-entry" style="width: 365px"></textarea>
		</div>
	</li>
    
</ul>
</form>


<div class="button-set">
    <div id="checkoutstep-buttons-container">
        <button type="button" class="button validation-passed" onclick="checkoutstep.save();"><span><?php echo $this->__('Continue') ?></span></button>
        <span id="checkoutstep-please-wait" style="display:none;" class="opc-please-wait">
            <img src="<?php echo $this->getSkinUrl('images/opc-ajax-loader.gif') ?>" class="v-middle" alt="" /> &nbsp; <?php echo $this->__('Loading next step...') ?> &nbsp;
        </span>
    </div>
</div>

<script type="text/javascript">
//<![CDATA[

var Checkoutstep = Class.create();
Checkoutstep.prototype = {
    initialize: function(form, saveUrl){
        this.form = form;
        if ($(this.form)) {
            $(this.form).observe('submit', function(event){this.save();Event.stop(event);}.bind(this));
        }
        this.saveUrl = saveUrl;
        this.onSave = this.nextStep.bindAsEventListener(this);
        this.onComplete = this.resetLoadWaiting.bindAsEventListener(this);
    },

    save: function(){
        if (checkout.loadWaiting!=false) return;

        var validator = new Validation(this.form);
        if (validator.validate()) {

            checkout.setLoadWaiting('checkoutstep');


            var request = new Ajax.Request(
                this.saveUrl,
                {
                    method: 'post',
                    onComplete: this.onComplete,
                    onSuccess: this.onSave,
                    onFailure: checkout.ajaxFailure.bind(checkout),
                    parameters: Form.serialize(this.form)
                }
            );
        }
    },

    resetLoadWaiting: function(transport){
        checkout.setLoadWaiting(false);
    },

    nextStep: function(transport){
        if (transport && transport.responseText){
            try{
                response = eval('(' + transport.responseText + ')');
            }
            catch (e) {
                response = {};
            }
        }

        if (response.error){
            if ((typeof response.message) == 'string') {
                alert(response.message);
            } else {
                if (window.billingRegionUpdater) {
                    billingRegionUpdater.update();
                }

                alert(response.message.join("\n"));
            }

            return false;
        }

        checkout.setStepResponse(response);
    }    
}

var checkoutstep = new Checkoutstep('co-checkoutstep-form', '<?php echo $this->getUrl('checkout/onepage/saveCheckoutstep') ?>');

$('shipping:same_as_entrant').observe('click',function(){
	if(this.checked){
		$('shipping:permanent').setValue($('shipping:local_address').value);
	}
	else{
		$('shipping:permanent').setValue('');	
	}
});

//]]>
</script>