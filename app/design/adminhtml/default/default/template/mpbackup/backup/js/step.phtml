<?php
/**
 * Mageplace Backup
 *
 * @category   Mageplace
 * @package    Mageplace_Backup
 * @copyright  Copyright (c) 2014 Mageplace. (http://www.mageplace.com)
 * @license    http://www.mageplace.com/disclaimer.html
 */

/** @var Mageplace_Backup_Block_Adminhtml_Backup_Js_Step $this */

$_stepObject = $this->getStepObject();
$_stepObjectArray = $_stepObject->toArray();
?>
<script>
    MP.Backup.Step = Class.create();
    MP.Backup.Step.prototype = {
        <?php foreach ($_stepObjectArray as $key => $value) : ?>
        '<?php echo $key; ?>': <?php echo Zend_Json::encode($value); ?>,
        <?php endforeach; ?>

        initialize: function (obj) {
            <?php foreach ($_stepObjectArray as $key => $value) : ?>
            this['<?php echo $key; ?>'] = <?php echo Zend_Json::encode($value); ?>;
            <?php endforeach; ?>

            if (!Object.isUndefined(obj)) {
                for (var prop in obj) {
                    this[prop] = obj[prop];
                }
            }
        },

        <?php foreach($_stepObjectArray as $key => $value) : ?>

        get<?php echo $methodName = $_stepObject->getMethodName($key); ?>: function () {
            return this['<?php echo $key; ?>'];
        },

        set<?php echo $methodName; ?>: function (value) {
            this['<?php echo $key; ?>'] = value;
            return this;
        },
        <?php endforeach; ?>


        getNames: function () {
            return {
                <?php
                $stepNames = array();
                $arrStepNames = $_stepObject->getStepNames();
                foreach ($arrStepNames as $step => $name) {
                    $stepNames [] = Zend_Json::encode($step) . ': ' . Zend_Json::encode($name);
                }
                echo implode(",\n", $stepNames);
                ?>
            };
        },

        getStepName: function (name) {
            if (Object.isUndefined(name)) {
                name = this.getStep();
            }

            if (name in this.getNames()) {
                return this.getNames()[name];
            } else {
                return "";
            }
        },

        getStepNumber: function (name) {
            if (Object.isUndefined(name)) {
                name = this.getStep();
            }

            if (name in this.getNames()) {
                var counter = 0;
                for (names in this.getNames()) {
                    counter++;
                    if (names == name) {
                        break;
                    }
                }
                return counter;
            } else {
                return;
            }
        },

        getPoints: function () {
            return {
                <?php
                $stepPoints = array();
                foreach ($_stepObject->getPoints() as $step => $points) {
                    $stepPoints [] = Zend_Json::encode($step) . ': ' . $points;
                }
                echo implode(",\n", $stepPoints);
                ?>
            };
        },

        getStepPoint: function (name) {
            if (Object.isUndefined(name)) {
                name = this.getStep();
            }

            if (name in this.getPoints()) {
                return this.getPoints()[name];
            } else {
                return 0;
            }
        },

        isNextStep: function () {
            return this['<?php echo Mageplace_Backup_Model_Backup_Step::SO_IS_NEXT; ?>'] == 1;
        },

        setStartStep: function () {
            this['<?php echo Mageplace_Backup_Model_Backup_Step::SO_STEP; ?>'] = '<?php echo Mageplace_Backup_Model_Backup_Step::STEP_START; ?>';
            return this;
        },

        isStartStep: function (step) {
            if (Object.isUndefined(name)) {
                name = this.getStep();
            }

            return step == '<?php echo Mageplace_Backup_Model_Backup_Step::STEP_START; ?>';
        },

        setFirstStep: function () {
            this['<?php echo Mageplace_Backup_Model_Backup_Step::SO_STEP; ?>'] = '<?php echo Mageplace_Backup_Model_Backup_Step::STEP_FIRST; ?>';
            return this;
        },

        isFinished: function () {
            return this['<?php echo Mageplace_Backup_Model_Backup_Step::SO_FINISHED; ?>'] == 1;
        },

        isFinishStep: function (step) {
            if (Object.isUndefined(name)) {
                name = this.getStep();
            }

            return step == '<?php echo Mageplace_Backup_Model_Backup_Step::STEP_FINISH; ?>';
        }
    };
</script>